{"title":"搭建ipsec VPN 服务器","slug":"搭建ipsec VPN 服务器","date":"2019-01-15T07:20:59.000Z","updated":"2022-06-02T01:05:59.617Z","comments":true,"path":"api/articles/搭建ipsec VPN 服务器.json","excerpt":"使用 Linux 脚本一键快速搭建自己的 IPsec VPN 服务器。支持 IPsec&#x2F;L2TP 和 Cisco IPsec 协议，可用于 Ubuntu&#x2F;Debian&#x2F;CentOS 系统。你只需提供自己的 VPN 登录凭证，然后运行脚本自动完成安装。IPsec VPN 可以加密你的网络流量，以防止在通过因特网传送时，你和 VPN 服务器之间的任何人对你的数据的未经授权的访问。在使用不安全的网络时，这是特别有用的，例如在咖啡厅，机场或旅馆房间。","covers":null,"content":"<p>使用 Linux 脚本一键快速搭建自己的 IPsec VPN 服务器。支持 IPsec&#x2F;L2TP 和 Cisco IPsec 协议，可用于 Ubuntu&#x2F;Debian&#x2F;CentOS 系统。你只需提供自己的 VPN 登录凭证，然后运行脚本自动完成安装。</p>\n<p>IPsec VPN 可以加密你的网络流量，以防止在通过因特网传送时，你和 VPN 服务器之间的任何人对你的数据的未经授权的访问。在使用不安全的网络时，这是特别有用的，例如在咖啡厅，机场或旅馆房间。</p>\n<p>我们将使用 <a href=\"https://libreswan.org/\" target=\"_blank\">Libreswan</a> 作为 IPsec 服务器，以及 <a href=\"https://github.com/xelerance/xl2tpd\" target=\"_blank\">xl2tpd</a> 作为 L2TP 提供者。</p>\n<div class=\"story post-story\"><h2 id=\"安装-Docker\"><a href=\"#安装-Docker\" class=\"headerlink\" title=\"安装 Docker\"></a>安装 Docker</h2><p>首先，在你的 Linux 服务器上 <a href=\"https://docs.docker.com/install/\">安装并运行 Docker</a>。</p>\n<p><strong>注：</strong> 本镜像不支持 Docker for Mac 或者 Windows。</p>\n</div><div class=\"story post-story\"><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>预构建的可信任镜像可在 <a href=\"https://hub.docker.com/r/hwdsl2/ipsec-vpn-server/\">Docker Hub registry</a> 下载：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull hwdsl2/ipsec-vpn-server</span><br></pre></td></tr></table></figure>\n\n</div><div class=\"story post-story\"><h2 id=\"如何使用本镜像\"><a href=\"#如何使用本镜像\" class=\"headerlink\" title=\"如何使用本镜像\"></a>如何使用本镜像</h2><h3 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h3><p>这个 Docker 镜像使用以下几个变量，可以在一个 <code>env</code> 文件中定义：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VPN_IPSEC_PSK=your_ipsec_pre_shared_key</span><br><span class=\"line\">VPN_USER=your_vpn_username</span><br><span class=\"line\">VPN_PASSWORD=your_vpn_password</span><br></pre></td></tr></table></figure>\n\n<p>这将创建一个用于 VPN 登录的用户账户，它可以在你的多个设备上使用<a href=\"#%E9%87%8D%E8%A6%81%E6%8F%90%E7%A4%BA\">*</a>。 IPsec PSK (预共享密钥) 由 <code>VPN_IPSEC_PSK</code> 环境变量指定。 VPN 用户名和密码分别在 <code>VPN_USER</code> 和 <code>VPN_PASSWORD</code> 中定义。</p>\n<p>支持创建额外的 VPN 用户，如果需要，可以像下面这样在你的 <code>env</code> 文件中定义。用户名和密码必须分别使用空格进行分隔，并且用户名不能有重复。所有的 VPN 用户将共享同一个 IPsec PSK。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VPN_ADDL_USERS=additional_username_1 additional_username_2</span><br><span class=\"line\">VPN_ADDL_PASSWORDS=additional_password_1 additional_password_2</span><br></pre></td></tr></table></figure>\n\n<p><strong>注：</strong> 在你的 <code>env</code> 文件中，<strong>不要</strong>为变量值添加 <code>&quot;&quot;</code> 或者 <code>&#39;&#39;</code>，或在 <code>=</code> 两边添加空格。<strong>不要</strong>在值中使用这些字符： <code>\\ &quot; &#39;</code>。一个安全的 IPsec PSK 应该至少包含 20 个随机字符。</p>\n<p>所有这些环境变量对于本镜像都是可选的，也就是说无需定义它们就可以搭建 IPsec VPN 服务器。详情请参见以下部分。</p>\n<h3 id=\"运行-IPsec-VPN-服务器\"><a href=\"#运行-IPsec-VPN-服务器\" class=\"headerlink\" title=\"运行 IPsec VPN 服务器\"></a>运行 IPsec VPN 服务器</h3><p><strong>重要：</strong> 首先，在 Docker 主机上加载 IPsec <code>af_key</code> 内核模块。该步骤在 Ubuntu 和 Debian 上为可选步骤。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo modprobe af_key</span><br></pre></td></tr></table></figure>\n\n<p>为保证这个内核模块在服务器启动时加载，请参见以下链接： <a href=\"https://help.ubuntu.com/community/Loadable_Modules\">Ubuntu&#x2F;Debian</a>, <a href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/sec-persistent_module_loading\">CentOS 6</a>, <a href=\"https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Kernel_Administration_Guide/sec-Persistent_Module_Loading.html\">CentOS 7</a>, <a href=\"https://docs.fedoraproject.org/en-US/fedora/f28/system-administrators-guide/kernel-module-driver-configuration/Working_with_Kernel_Modules/index.html#sec-Persistent_Module_Loading\">Fedora</a> 和 <a href=\"https://coreos.com/os/docs/latest/other-settings.html\">CoreOS</a>。</p>\n<p>使用本镜像创建一个新的 Docker 容器 （将 <code>./vpn.env</code> 替换为你自己的 <code>env</code> 文件）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run \\</span><br><span class=\"line\">    --name ipsec-vpn-server \\</span><br><span class=\"line\">    --env-file ./vpn.env \\</span><br><span class=\"line\">    --restart=always \\</span><br><span class=\"line\">    -p 500:500/udp \\</span><br><span class=\"line\">    -p 4500:4500/udp \\</span><br><span class=\"line\">    -v /lib/modules:/lib/modules:ro \\</span><br><span class=\"line\">    -d --privileged \\</span><br><span class=\"line\">    hwdsl2/ipsec-vpn-server</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取-VPN-登录信息\"><a href=\"#获取-VPN-登录信息\" class=\"headerlink\" title=\"获取 VPN 登录信息\"></a>获取 VPN 登录信息</h3><p>如果你在上述 <code>docker run</code> 命令中没有指定 <code>env</code> 文件，<code>VPN_USER</code> 会默认为 <code>vpnuser</code>，并且 <code>VPN_IPSEC_PSK</code> 和 <code>VPN_PASSWORD</code> 会被自动随机生成。要获取这些登录信息，可以查看容器的日志：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker logs ipsec-vpn-server</span><br></pre></td></tr></table></figure>\n\n<p>在命令输出中查找这些行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Connect to your new VPN with these details:</span><br><span class=\"line\"></span><br><span class=\"line\">Server IP: 你的VPN服务器IP</span><br><span class=\"line\">IPsec PSK: 你的IPsec预共享密钥</span><br><span class=\"line\">Username: 你的VPN用户名</span><br><span class=\"line\">Password: 你的VPN密码</span><br></pre></td></tr></table></figure>\n\n<p>（可选步骤）备份自动生成的 VPN 登录信息（如果有）到当前目录：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp ipsec-vpn-server:/opt/src/vpn-gen.env ./</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看服务器状态\"><a href=\"#查看服务器状态\" class=\"headerlink\" title=\"查看服务器状态\"></a>查看服务器状态</h3><p>如需查看你的 IPsec VPN 服务器状态，可以在容器中运行 <code>ipsec status</code> 命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it ipsec-vpn-server ipsec status</span><br></pre></td></tr></table></figure>\n\n<p>或者查看当前已建立的 VPN 连接：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it ipsec-vpn-server ipsec whack --trafficstatus</span><br></pre></td></tr></table></figure>\n\n</div><div class=\"story post-story\"><h2 id=\"下一步\"><a href=\"#下一步\" class=\"headerlink\" title=\"下一步\"></a>下一步</h2><p>配置你的计算机或其它设备使用 VPN 。请参见：</p>\n<p><strong><a href=\"https://github.com/dislazy/setup-ipsec-vpn/blob/master/docs/clients-zh.md\">配置 IPsec&#x2F;L2TP VPN 客户端</a></strong></p>\n<p><strong><a href=\"https://github.com/dislazy/setup-ipsec-vpn/blob/master/docs/clients-xauth-zh.md\">配置 IPsec&#x2F;XAuth (“Cisco IPsec”) VPN 客户端</a></strong></p>\n<p>如果在连接过程中遇到错误，请参见 <a href=\"https://github.com/dislazy/setup-ipsec-vpn/blob/master/docs/clients-zh.md#%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4\">故障排除</a>。</p>\n<p>开始使用自己的专属 VPN !</p>\n</div><div class=\"story post-story\"><h2 id=\"重要提示\"><a href=\"#重要提示\" class=\"headerlink\" title=\"重要提示\"></a>重要提示</h2><p><em>其他语言版本: <a href=\"https://github.com/dislazy/docker-ipsec-vpn-server/blob/master/README.md#important-notes\">English</a>, <a href=\"https://github.com/dislazy/docker-ipsec-vpn-server/blob/master/README-zh.md#%E9%87%8D%E8%A6%81%E6%8F%90%E7%A4%BA\">简体中文</a>.</em></p>\n<p><strong>Windows 用户</strong> 在首次连接之前需要<a href=\"https://github.com/dislazy/setup-ipsec-vpn/blob/master/docs/clients-zh.md#windows-%E9%94%99%E8%AF%AF-809\">修改注册表</a>，以解决 VPN 服务器 和&#x2F;或 客户端与 NAT（比如家用路由器）的兼容问题。</p>\n<p>同一个 VPN 账户可以在你的多个设备上使用。但是由于 IPsec&#x2F;L2TP 的局限性，如果需要同时连接在同一个 NAT （比如家用路由器）后面的多个设备到 VPN 服务器，你必须仅使用 <a href=\"https://github.com/dislazy/setup-ipsec-vpn/blob/master/docs/clients-xauth-zh.md\">IPsec&#x2F;XAuth 模式</a>。</p>\n<p>对于有外部防火墙的服务器（比如 <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html\">EC2</a>&#x2F;<a href=\"https://cloud.google.com/vpc/docs/firewalls\">GCE</a>），请为 VPN 打开 UDP 端口 500 和 4500。阿里云用户请参见 <a href=\"https://github.com/hwdsl2/setup-ipsec-vpn/issues/433\">#433</a>。</p>\n<p>如果需要编辑 VPN 配置文件，你必须首先在正在运行的 Docker 容器中 <a href=\"#%E5%9C%A8%E5%AE%B9%E5%99%A8%E4%B8%AD%E8%BF%90%E8%A1%8C-bash-shell\">开始一个 Bash 会话</a>。</p>\n<p>如需添加，修改或者删除 VPN 用户账户，首先更新你的 <code>env</code> 文件，然后你必须按照 <a href=\"#%E6%9B%B4%E6%96%B0-docker-%E9%95%9C%E5%83%8F\">下一节</a> 的说明来删除并重新创建 Docker 容器。高级用户可以 <a href=\"#%E7%BB%91%E5%AE%9A%E6%8C%82%E8%BD%BD-env-%E6%96%87%E4%BB%B6\">绑定挂载</a> <code>env</code> 文件。</p>\n<p>在 VPN 已连接时，客户端配置为使用 <a href=\"https://developers.google.com/speed/public-dns/\">Google Public DNS</a>。如果偏好其它的域名解析服务，请看<a href=\"#%E4%BD%BF%E7%94%A8%E5%85%B6%E4%BB%96%E7%9A%84-dns-%E6%9C%8D%E5%8A%A1%E5%99%A8\">这里</a>。</p>\n</div><div class=\"story post-story\"><h2 id=\"更新-Docker-镜像\"><a href=\"#更新-Docker-镜像\" class=\"headerlink\" title=\"更新 Docker 镜像\"></a>更新 Docker 镜像</h2><p>如需更新你的 Docker 镜像和容器，请按以下步骤进行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull hwdsl2/ipsec-vpn-server</span><br></pre></td></tr></table></figure>\n\n<p>如果 Docker 镜像已经是最新的，你会看到提示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Status: Image is up to date for hwdsl2/ipsec-vpn-server:latest</span><br></pre></td></tr></table></figure>\n\n<p>否则，将会下载最新版本。要更新你的 Docker 容器，首先在纸上记下你所有的 VPN 登录信息（参见上面的 “获取 VPN 登录信息”）。然后删除 Docker 容器： <code>docker rm -f ipsec-vpn-server</code>。最后按照 “如何使用本镜像” 的说明来重新创建它。</p>\n</div><div class=\"story post-story\"><h2 id=\"高级用法\"><a href=\"#高级用法\" class=\"headerlink\" title=\"高级用法\"></a>高级用法</h2><h3 id=\"使用其他的-DNS-服务器\"><a href=\"#使用其他的-DNS-服务器\" class=\"headerlink\" title=\"使用其他的 DNS 服务器\"></a>使用其他的 DNS 服务器</h3><p>在 VPN 已连接时，客户端配置为使用 <a href=\"https://developers.google.com/speed/public-dns/\">Google Public DNS</a>。如果偏好其它的域名解析服务，你可以在 <code>env</code> 文件中定义 <code>VPN_DNS_SRV1</code> 和 <code>VPN_DNS_SRV2</code>（可选），然后按照上面的说明重新创建 Docker 容器。比如你想使用 <a href=\"https://1.1.1.1/\">Cloudflare 的 DNS 服务</a>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VPN_DNS_SRV1=1.1.1.1</span><br><span class=\"line\">VPN_DNS_SRV2=1.0.0.1</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"从源代码构建\"><a href=\"#从源代码构建\" class=\"headerlink\" title=\"从源代码构建\"></a>从源代码构建</h3><p>高级用户可以从 GitHub 下载并自行编译源代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/dislazy/docker-ipsec-vpn-server.git</span><br><span class=\"line\">cd docker-ipsec-vpn-server</span><br><span class=\"line\">docker build -t dislazy/ipsec-vpn-server .</span><br></pre></td></tr></table></figure>\n\n<p>若不需要改动源码，也可以这样：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t dislazy/ipsec-vpn-server github.com/dislazy/docker-ipsec-vpn-server.git</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在容器中运行-Bash-shell\"><a href=\"#在容器中运行-Bash-shell\" class=\"headerlink\" title=\"在容器中运行 Bash shell\"></a>在容器中运行 Bash shell</h3><p>在正在运行的 Docker 容器中开始一个 Bash 会话：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it ipsec-vpn-server env TERM=xterm bash -l</span><br></pre></td></tr></table></figure>\n\n<p>（可选步骤） 安装 <code>nano</code> 编辑器：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get update &amp;&amp; apt-get -y install nano</span><br></pre></td></tr></table></figure>\n\n<p>然后在容器中运行你的命令。完成后退出并重启 Docker 容器 （如果需要）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exit</span><br><span class=\"line\">docker restart ipsec-vpn-server</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"绑定挂载-env-文件\"><a href=\"#绑定挂载-env-文件\" class=\"headerlink\" title=\"绑定挂载 env 文件\"></a>绑定挂载 env 文件</h3><p>作为 <code>--env-file</code> 选项的替代方案，高级用户可以绑定挂载 <code>env</code> 文件。该方法的好处是你在更新 <code>env</code> 文件之后可以重启 Docker 容器以生效，而不需要重新创建它。要使用这个方法，你必须首先编辑你的 <code>env</code> 文件并将所有的变量值用单引号 <code>&#39;&#39;</code> 括起来。然后（重新）创建 Docker 容器（将第一个 <code>vpn.env</code> 替换为你自己的 <code>env</code> 文件）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run \\</span><br><span class=\"line\">    --name ipsec-vpn-server \\</span><br><span class=\"line\">    --restart=always \\</span><br><span class=\"line\">    -p 500:500/udp \\</span><br><span class=\"line\">    -p 4500:4500/udp \\</span><br><span class=\"line\">    -v &quot;$(pwd)/vpn.env:/opt/src/vpn.env:ro&quot; \\</span><br><span class=\"line\">    -v /lib/modules:/lib/modules:ro \\</span><br><span class=\"line\">    -d --privileged \\</span><br><span class=\"line\">    hwdsl2/ipsec-vpn-server</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启用-Libreswan-日志\"><a href=\"#启用-Libreswan-日志\" class=\"headerlink\" title=\"启用 Libreswan 日志\"></a>启用 Libreswan 日志</h3><p>为了保持较小的 Docker 镜像，Libreswan (IPsec) 日志默认未开启。如果你是高级用户，并且需要启用它以便进行故障排除，首先在正在运行的 Docker 容器中开始一个 Bash 会话：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it ipsec-vpn-server env TERM=xterm bash -l</span><br></pre></td></tr></table></figure>\n\n<p>然后运行以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get update &amp;&amp; apt-get -y install rsyslog</span><br><span class=\"line\">service rsyslog restart</span><br><span class=\"line\">service ipsec restart</span><br><span class=\"line\">sed -i &#x27;/modprobe/a service rsyslog restart&#x27; /opt/src/run.sh</span><br><span class=\"line\">exit</span><br></pre></td></tr></table></figure>\n\n<p>完成后你可以这样查看 Libreswan 日志：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it ipsec-vpn-server grep pluto /var/log/auth.log</span><br></pre></td></tr></table></figure>\n\n<p>如需查看 xl2tpd 日志，请运行 <code>docker logs ipsec-vpn-server</code>。</p>\n</div><div class=\"story post-story\"><h2 id=\"技术细节\"><a href=\"#技术细节\" class=\"headerlink\" title=\"技术细节\"></a>技术细节</h2><p>需要运行以下两个服务： <code>Libreswan (pluto)</code> 提供 IPsec VPN， <code>xl2tpd</code> 提供 L2TP 支持。</p>\n<p>默认的 IPsec 配置支持以下协议：</p>\n<ul>\n<li>IKEv1 with PSK and XAuth (“Cisco IPsec”)</li>\n<li>IPsec&#x2F;L2TP with PSK</li>\n</ul>\n<p>为使 VPN 服务器正常工作，将会打开以下端口：</p>\n<ul>\n<li>4500&#x2F;udp and 500&#x2F;udp for IPsec</li>\n</ul>\n\n</div>","more":"\n<p>我们将使用 <a href=\"https://libreswan.org/\" target=\"_blank\">Libreswan</a> 作为 IPsec 服务器，以及 <a href=\"https://github.com/xelerance/xl2tpd\" target=\"_blank\">xl2tpd</a> 作为 L2TP 提供者。</p>\n<div class=\"story post-story\"><h2 id=\"安装-Docker\"><a href=\"#安装-Docker\" class=\"headerlink\" title=\"安装 Docker\"></a>安装 Docker</h2><p>首先，在你的 Linux 服务器上 <a href=\"https://docs.docker.com/install/\">安装并运行 Docker</a>。</p>\n<p><strong>注：</strong> 本镜像不支持 Docker for Mac 或者 Windows。</p>\n</div><div class=\"story post-story\"><h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>预构建的可信任镜像可在 <a href=\"https://hub.docker.com/r/hwdsl2/ipsec-vpn-server/\">Docker Hub registry</a> 下载：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull hwdsl2/ipsec-vpn-server</span><br></pre></td></tr></table></figure>\n\n</div><div class=\"story post-story\"><h2 id=\"如何使用本镜像\"><a href=\"#如何使用本镜像\" class=\"headerlink\" title=\"如何使用本镜像\"></a>如何使用本镜像</h2><h3 id=\"环境变量\"><a href=\"#环境变量\" class=\"headerlink\" title=\"环境变量\"></a>环境变量</h3><p>这个 Docker 镜像使用以下几个变量，可以在一个 <code>env</code> 文件中定义：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VPN_IPSEC_PSK=your_ipsec_pre_shared_key</span><br><span class=\"line\">VPN_USER=your_vpn_username</span><br><span class=\"line\">VPN_PASSWORD=your_vpn_password</span><br></pre></td></tr></table></figure>\n\n<p>这将创建一个用于 VPN 登录的用户账户，它可以在你的多个设备上使用<a href=\"#%E9%87%8D%E8%A6%81%E6%8F%90%E7%A4%BA\">*</a>。 IPsec PSK (预共享密钥) 由 <code>VPN_IPSEC_PSK</code> 环境变量指定。 VPN 用户名和密码分别在 <code>VPN_USER</code> 和 <code>VPN_PASSWORD</code> 中定义。</p>\n<p>支持创建额外的 VPN 用户，如果需要，可以像下面这样在你的 <code>env</code> 文件中定义。用户名和密码必须分别使用空格进行分隔，并且用户名不能有重复。所有的 VPN 用户将共享同一个 IPsec PSK。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VPN_ADDL_USERS=additional_username_1 additional_username_2</span><br><span class=\"line\">VPN_ADDL_PASSWORDS=additional_password_1 additional_password_2</span><br></pre></td></tr></table></figure>\n\n<p><strong>注：</strong> 在你的 <code>env</code> 文件中，<strong>不要</strong>为变量值添加 <code>&quot;&quot;</code> 或者 <code>&#39;&#39;</code>，或在 <code>=</code> 两边添加空格。<strong>不要</strong>在值中使用这些字符： <code>\\ &quot; &#39;</code>。一个安全的 IPsec PSK 应该至少包含 20 个随机字符。</p>\n<p>所有这些环境变量对于本镜像都是可选的，也就是说无需定义它们就可以搭建 IPsec VPN 服务器。详情请参见以下部分。</p>\n<h3 id=\"运行-IPsec-VPN-服务器\"><a href=\"#运行-IPsec-VPN-服务器\" class=\"headerlink\" title=\"运行 IPsec VPN 服务器\"></a>运行 IPsec VPN 服务器</h3><p><strong>重要：</strong> 首先，在 Docker 主机上加载 IPsec <code>af_key</code> 内核模块。该步骤在 Ubuntu 和 Debian 上为可选步骤。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo modprobe af_key</span><br></pre></td></tr></table></figure>\n\n<p>为保证这个内核模块在服务器启动时加载，请参见以下链接： <a href=\"https://help.ubuntu.com/community/Loadable_Modules\">Ubuntu&#x2F;Debian</a>, <a href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/6/html/deployment_guide/sec-persistent_module_loading\">CentOS 6</a>, <a href=\"https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Kernel_Administration_Guide/sec-Persistent_Module_Loading.html\">CentOS 7</a>, <a href=\"https://docs.fedoraproject.org/en-US/fedora/f28/system-administrators-guide/kernel-module-driver-configuration/Working_with_Kernel_Modules/index.html#sec-Persistent_Module_Loading\">Fedora</a> 和 <a href=\"https://coreos.com/os/docs/latest/other-settings.html\">CoreOS</a>。</p>\n<p>使用本镜像创建一个新的 Docker 容器 （将 <code>./vpn.env</code> 替换为你自己的 <code>env</code> 文件）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run \\</span><br><span class=\"line\">    --name ipsec-vpn-server \\</span><br><span class=\"line\">    --env-file ./vpn.env \\</span><br><span class=\"line\">    --restart=always \\</span><br><span class=\"line\">    -p 500:500/udp \\</span><br><span class=\"line\">    -p 4500:4500/udp \\</span><br><span class=\"line\">    -v /lib/modules:/lib/modules:ro \\</span><br><span class=\"line\">    -d --privileged \\</span><br><span class=\"line\">    hwdsl2/ipsec-vpn-server</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"获取-VPN-登录信息\"><a href=\"#获取-VPN-登录信息\" class=\"headerlink\" title=\"获取 VPN 登录信息\"></a>获取 VPN 登录信息</h3><p>如果你在上述 <code>docker run</code> 命令中没有指定 <code>env</code> 文件，<code>VPN_USER</code> 会默认为 <code>vpnuser</code>，并且 <code>VPN_IPSEC_PSK</code> 和 <code>VPN_PASSWORD</code> 会被自动随机生成。要获取这些登录信息，可以查看容器的日志：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker logs ipsec-vpn-server</span><br></pre></td></tr></table></figure>\n\n<p>在命令输出中查找这些行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Connect to your new VPN with these details:</span><br><span class=\"line\"></span><br><span class=\"line\">Server IP: 你的VPN服务器IP</span><br><span class=\"line\">IPsec PSK: 你的IPsec预共享密钥</span><br><span class=\"line\">Username: 你的VPN用户名</span><br><span class=\"line\">Password: 你的VPN密码</span><br></pre></td></tr></table></figure>\n\n<p>（可选步骤）备份自动生成的 VPN 登录信息（如果有）到当前目录：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp ipsec-vpn-server:/opt/src/vpn-gen.env ./</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看服务器状态\"><a href=\"#查看服务器状态\" class=\"headerlink\" title=\"查看服务器状态\"></a>查看服务器状态</h3><p>如需查看你的 IPsec VPN 服务器状态，可以在容器中运行 <code>ipsec status</code> 命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it ipsec-vpn-server ipsec status</span><br></pre></td></tr></table></figure>\n\n<p>或者查看当前已建立的 VPN 连接：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it ipsec-vpn-server ipsec whack --trafficstatus</span><br></pre></td></tr></table></figure>\n\n</div><div class=\"story post-story\"><h2 id=\"下一步\"><a href=\"#下一步\" class=\"headerlink\" title=\"下一步\"></a>下一步</h2><p>配置你的计算机或其它设备使用 VPN 。请参见：</p>\n<p><strong><a href=\"https://github.com/dislazy/setup-ipsec-vpn/blob/master/docs/clients-zh.md\">配置 IPsec&#x2F;L2TP VPN 客户端</a></strong></p>\n<p><strong><a href=\"https://github.com/dislazy/setup-ipsec-vpn/blob/master/docs/clients-xauth-zh.md\">配置 IPsec&#x2F;XAuth (“Cisco IPsec”) VPN 客户端</a></strong></p>\n<p>如果在连接过程中遇到错误，请参见 <a href=\"https://github.com/dislazy/setup-ipsec-vpn/blob/master/docs/clients-zh.md#%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4\">故障排除</a>。</p>\n<p>开始使用自己的专属 VPN !</p>\n</div><div class=\"story post-story\"><h2 id=\"重要提示\"><a href=\"#重要提示\" class=\"headerlink\" title=\"重要提示\"></a>重要提示</h2><p><em>其他语言版本: <a href=\"https://github.com/dislazy/docker-ipsec-vpn-server/blob/master/README.md#important-notes\">English</a>, <a href=\"https://github.com/dislazy/docker-ipsec-vpn-server/blob/master/README-zh.md#%E9%87%8D%E8%A6%81%E6%8F%90%E7%A4%BA\">简体中文</a>.</em></p>\n<p><strong>Windows 用户</strong> 在首次连接之前需要<a href=\"https://github.com/dislazy/setup-ipsec-vpn/blob/master/docs/clients-zh.md#windows-%E9%94%99%E8%AF%AF-809\">修改注册表</a>，以解决 VPN 服务器 和&#x2F;或 客户端与 NAT（比如家用路由器）的兼容问题。</p>\n<p>同一个 VPN 账户可以在你的多个设备上使用。但是由于 IPsec&#x2F;L2TP 的局限性，如果需要同时连接在同一个 NAT （比如家用路由器）后面的多个设备到 VPN 服务器，你必须仅使用 <a href=\"https://github.com/dislazy/setup-ipsec-vpn/blob/master/docs/clients-xauth-zh.md\">IPsec&#x2F;XAuth 模式</a>。</p>\n<p>对于有外部防火墙的服务器（比如 <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html\">EC2</a>&#x2F;<a href=\"https://cloud.google.com/vpc/docs/firewalls\">GCE</a>），请为 VPN 打开 UDP 端口 500 和 4500。阿里云用户请参见 <a href=\"https://github.com/hwdsl2/setup-ipsec-vpn/issues/433\">#433</a>。</p>\n<p>如果需要编辑 VPN 配置文件，你必须首先在正在运行的 Docker 容器中 <a href=\"#%E5%9C%A8%E5%AE%B9%E5%99%A8%E4%B8%AD%E8%BF%90%E8%A1%8C-bash-shell\">开始一个 Bash 会话</a>。</p>\n<p>如需添加，修改或者删除 VPN 用户账户，首先更新你的 <code>env</code> 文件，然后你必须按照 <a href=\"#%E6%9B%B4%E6%96%B0-docker-%E9%95%9C%E5%83%8F\">下一节</a> 的说明来删除并重新创建 Docker 容器。高级用户可以 <a href=\"#%E7%BB%91%E5%AE%9A%E6%8C%82%E8%BD%BD-env-%E6%96%87%E4%BB%B6\">绑定挂载</a> <code>env</code> 文件。</p>\n<p>在 VPN 已连接时，客户端配置为使用 <a href=\"https://developers.google.com/speed/public-dns/\">Google Public DNS</a>。如果偏好其它的域名解析服务，请看<a href=\"#%E4%BD%BF%E7%94%A8%E5%85%B6%E4%BB%96%E7%9A%84-dns-%E6%9C%8D%E5%8A%A1%E5%99%A8\">这里</a>。</p>\n</div><div class=\"story post-story\"><h2 id=\"更新-Docker-镜像\"><a href=\"#更新-Docker-镜像\" class=\"headerlink\" title=\"更新 Docker 镜像\"></a>更新 Docker 镜像</h2><p>如需更新你的 Docker 镜像和容器，请按以下步骤进行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull hwdsl2/ipsec-vpn-server</span><br></pre></td></tr></table></figure>\n\n<p>如果 Docker 镜像已经是最新的，你会看到提示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Status: Image is up to date for hwdsl2/ipsec-vpn-server:latest</span><br></pre></td></tr></table></figure>\n\n<p>否则，将会下载最新版本。要更新你的 Docker 容器，首先在纸上记下你所有的 VPN 登录信息（参见上面的 “获取 VPN 登录信息”）。然后删除 Docker 容器： <code>docker rm -f ipsec-vpn-server</code>。最后按照 “如何使用本镜像” 的说明来重新创建它。</p>\n</div><div class=\"story post-story\"><h2 id=\"高级用法\"><a href=\"#高级用法\" class=\"headerlink\" title=\"高级用法\"></a>高级用法</h2><h3 id=\"使用其他的-DNS-服务器\"><a href=\"#使用其他的-DNS-服务器\" class=\"headerlink\" title=\"使用其他的 DNS 服务器\"></a>使用其他的 DNS 服务器</h3><p>在 VPN 已连接时，客户端配置为使用 <a href=\"https://developers.google.com/speed/public-dns/\">Google Public DNS</a>。如果偏好其它的域名解析服务，你可以在 <code>env</code> 文件中定义 <code>VPN_DNS_SRV1</code> 和 <code>VPN_DNS_SRV2</code>（可选），然后按照上面的说明重新创建 Docker 容器。比如你想使用 <a href=\"https://1.1.1.1/\">Cloudflare 的 DNS 服务</a>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VPN_DNS_SRV1=1.1.1.1</span><br><span class=\"line\">VPN_DNS_SRV2=1.0.0.1</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"从源代码构建\"><a href=\"#从源代码构建\" class=\"headerlink\" title=\"从源代码构建\"></a>从源代码构建</h3><p>高级用户可以从 GitHub 下载并自行编译源代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/dislazy/docker-ipsec-vpn-server.git</span><br><span class=\"line\">cd docker-ipsec-vpn-server</span><br><span class=\"line\">docker build -t dislazy/ipsec-vpn-server .</span><br></pre></td></tr></table></figure>\n\n<p>若不需要改动源码，也可以这样：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t dislazy/ipsec-vpn-server github.com/dislazy/docker-ipsec-vpn-server.git</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在容器中运行-Bash-shell\"><a href=\"#在容器中运行-Bash-shell\" class=\"headerlink\" title=\"在容器中运行 Bash shell\"></a>在容器中运行 Bash shell</h3><p>在正在运行的 Docker 容器中开始一个 Bash 会话：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it ipsec-vpn-server env TERM=xterm bash -l</span><br></pre></td></tr></table></figure>\n\n<p>（可选步骤） 安装 <code>nano</code> 编辑器：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get update &amp;&amp; apt-get -y install nano</span><br></pre></td></tr></table></figure>\n\n<p>然后在容器中运行你的命令。完成后退出并重启 Docker 容器 （如果需要）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exit</span><br><span class=\"line\">docker restart ipsec-vpn-server</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"绑定挂载-env-文件\"><a href=\"#绑定挂载-env-文件\" class=\"headerlink\" title=\"绑定挂载 env 文件\"></a>绑定挂载 env 文件</h3><p>作为 <code>--env-file</code> 选项的替代方案，高级用户可以绑定挂载 <code>env</code> 文件。该方法的好处是你在更新 <code>env</code> 文件之后可以重启 Docker 容器以生效，而不需要重新创建它。要使用这个方法，你必须首先编辑你的 <code>env</code> 文件并将所有的变量值用单引号 <code>&#39;&#39;</code> 括起来。然后（重新）创建 Docker 容器（将第一个 <code>vpn.env</code> 替换为你自己的 <code>env</code> 文件）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run \\</span><br><span class=\"line\">    --name ipsec-vpn-server \\</span><br><span class=\"line\">    --restart=always \\</span><br><span class=\"line\">    -p 500:500/udp \\</span><br><span class=\"line\">    -p 4500:4500/udp \\</span><br><span class=\"line\">    -v &quot;$(pwd)/vpn.env:/opt/src/vpn.env:ro&quot; \\</span><br><span class=\"line\">    -v /lib/modules:/lib/modules:ro \\</span><br><span class=\"line\">    -d --privileged \\</span><br><span class=\"line\">    hwdsl2/ipsec-vpn-server</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"启用-Libreswan-日志\"><a href=\"#启用-Libreswan-日志\" class=\"headerlink\" title=\"启用 Libreswan 日志\"></a>启用 Libreswan 日志</h3><p>为了保持较小的 Docker 镜像，Libreswan (IPsec) 日志默认未开启。如果你是高级用户，并且需要启用它以便进行故障排除，首先在正在运行的 Docker 容器中开始一个 Bash 会话：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it ipsec-vpn-server env TERM=xterm bash -l</span><br></pre></td></tr></table></figure>\n\n<p>然后运行以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get update &amp;&amp; apt-get -y install rsyslog</span><br><span class=\"line\">service rsyslog restart</span><br><span class=\"line\">service ipsec restart</span><br><span class=\"line\">sed -i &#x27;/modprobe/a service rsyslog restart&#x27; /opt/src/run.sh</span><br><span class=\"line\">exit</span><br></pre></td></tr></table></figure>\n\n<p>完成后你可以这样查看 Libreswan 日志：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it ipsec-vpn-server grep pluto /var/log/auth.log</span><br></pre></td></tr></table></figure>\n\n<p>如需查看 xl2tpd 日志，请运行 <code>docker logs ipsec-vpn-server</code>。</p>\n</div><div class=\"story post-story\"><h2 id=\"技术细节\"><a href=\"#技术细节\" class=\"headerlink\" title=\"技术细节\"></a>技术细节</h2><p>需要运行以下两个服务： <code>Libreswan (pluto)</code> 提供 IPsec VPN， <code>xl2tpd</code> 提供 L2TP 支持。</p>\n<p>默认的 IPsec 配置支持以下协议：</p>\n<ul>\n<li>IKEv1 with PSK and XAuth (“Cisco IPsec”)</li>\n<li>IPsec&#x2F;L2TP with PSK</li>\n</ul>\n<p>为使 VPN 服务器正常工作，将会打开以下端口：</p>\n<ul>\n<li>4500&#x2F;udp and 500&#x2F;udp for IPsec</li>\n</ul>\n\n</div>","categories":[{"name":"Linux","path":"api/categories/Linux.json"}],"tags":[{"name":"vpn","path":"api/tags/vpn.json"}]}