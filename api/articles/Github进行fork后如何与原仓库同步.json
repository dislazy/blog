{"title":"Github进行fork后如何与原仓库同步","slug":"Github进行fork后如何与原仓库同步","date":"2021-03-09T11:33:23.000Z","updated":"2022-06-02T01:05:59.612Z","comments":true,"path":"api/articles/Github进行fork后如何与原仓库同步.json","excerpt":"前言  近期使用github给baidu&#x2F;brcc提交pr，然后发现提完pr以后我如果再次修改并且baidu&#x2F;brcc有其他人的更新，我的fork仓库无法同步，所以找了一些最佳实践，在此进行总结。实现方案一般情况下，这种情况有两种做法：将fork的仓库在你的github上删除掉，然后重新fork通过git命令将原代码进行同步到你的代码中实际上在github的操作中都是merge 与 merge的操作，在你只需要和原代码保持一致的情况下，可以采用第二种方案进行同步","covers":null,"content":"<div class=\"story post-story\"><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>  近期使用github给baidu&#x2F;brcc提交pr，然后发现提完pr以后我如果再次修改并且baidu&#x2F;brcc有其他人的更新，我的fork仓库无法同步，所以找了一些最佳实践，在此进行总结。</p>\n</div><div class=\"story post-story\"><h2 id=\"实现方案\"><a href=\"#实现方案\" class=\"headerlink\" title=\"实现方案\"></a>实现方案</h2><p>一般情况下，这种情况有两种做法：</p>\n<ul>\n<li>将fork的仓库在你的github上删除掉，然后重新fork</li>\n<li>通过git命令将原代码进行同步到你的代码中</li>\n</ul>\n<p>实际上在github的操作中都是merge 与 merge的操作，在你只需要和原代码保持一致的情况下，可以采用第二种方案进行同步</p>\n</div><div class=\"story post-story\"><h2 id=\"实践步骤\"><a href=\"#实践步骤\" class=\"headerlink\" title=\"实践步骤\"></a>实践步骤</h2><pre><code>通过git命令将原代码同步到我fork的代码仓库中，使用merge的方法来进行操作。下面是具体的操作命令，以brcc仓库为例.\n</code></pre>\n<ul>\n<li><p>1、进入到我的本地仓库中：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/github-me/brcc/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2、执行命令 <code>git remote -v </code> 查看远程仓库的地址<br>初始情况下，执行完命令只会存在如下两条记录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git remote -v </span><br><span class=\"line\">origin\tgit@github.com:dislazy/brcc.git (fetch)</span><br><span class=\"line\">origin\tgit@github.com:dislazy/brcc.git (push)</span><br></pre></td></tr></table></figure></li>\n<li><p>3、执行命令 <code>git remote add upstream git@github.com:baidu/brcc.git</code>  给当前仓库添加 上游仓库(upstream)<br>添加完上游仓库之后再次执行<code>git remote -v </code>，就可以看到当前的代码仓库出现了四条记录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git remote -v </span><br><span class=\"line\">origin\tgit@github.com:dislazy/brcc.git (fetch)</span><br><span class=\"line\">origin\tgit@github.com:dislazy/brcc.git (push)</span><br><span class=\"line\">upstream\tgit@github.com:baidu/brcc.git (fetch)</span><br><span class=\"line\">upstream\tgit@github.com:baidu/brcc.git (push)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>4、执行命令 <code>git status</code> 查看自己存不存在当前分支下已修改未提交的，如果有的话可以提交到你的当前分支去(前提是你的代码不是主分支)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git status</span><br><span class=\"line\">On branch main</span><br><span class=\"line\">Your branch is up to date with &#x27;origin/main&#x27;.</span><br><span class=\"line\"></span><br><span class=\"line\">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure></li>\n<li><p>5、执行命令 <code>git fetch upstream</code> 抓取 baidu&#x2F;brcc 原仓库的更新</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git fetch upstream </span><br><span class=\"line\">remote: Enumerating objects: 136, done.</span><br><span class=\"line\">remote: Counting objects: 100% (110/110), done.</span><br><span class=\"line\">remote: Compressing objects: 100% (45/45), done.</span><br><span class=\"line\">remote: Total 82 (delta 32), reused 63 (delta 14), pack-reused 0</span><br><span class=\"line\">Unpacking objects: 100% (82/82), 7.48 KiB | 134.00 KiB/s, done.</span><br><span class=\"line\">From github.com:baidu/brcc</span><br><span class=\"line\"> * [new branch]      main       -&gt; upstream/main</span><br></pre></td></tr></table></figure></li>\n<li><p>6、如果你的代码不是主分支，那么执行命令 <code>git checkout main</code> 切换到代码主分支</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git checkout main</span><br><span class=\"line\">Already on &#x27;main&#x27;</span><br><span class=\"line\">Your branch is up to date with &#x27;origin/main&#x27;.</span><br></pre></td></tr></table></figure></li>\n<li><p>7、最关键命令 <code>git merge upstream/main</code>，将原代码的主分支代码merge到你的fork仓库主分支上</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git merge upstream/main </span><br><span class=\"line\">Updating f8099cb..a5d4533</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> .codecov.yml                                                                                    |   6 +-</span><br><span class=\"line\"> README.md                                                                                       | 178 ++++++++++++++++++++++++++++----------------------------</span><br><span class=\"line\"> brcc-cache/src/test/java/com/baidu/brcc/SampleTest.java                                         |  41 -------------</span><br><span class=\"line\"> brcc-example/src/test/java/com/baidu/brcc/example/ApplicationTest.java                          |  31 ----------</span><br><span class=\"line\"> brcc-sdk-starter/pom.xml                                                                        |   2 +-</span><br><span class=\"line\"> brcc-sdk/pom.xml                                                                                |   2 +-</span><br><span class=\"line\"> brcc-sdk/src/test/java/com/baidu/brcc/ConfigChangedListenerTest.java                            |   2 +-</span><br><span class=\"line\"> brcc-sdk/src/test/java/com/baidu/brcc/spring/ConfigCenterPropertyPlaceholderConfigurerTest.java |   2 +-</span><br><span class=\"line\"> brcc-server/src/test/java/com/baidu/brcc/RccApplicationTest.java                                |  30 ----------</span><br><span class=\"line\"> doc/java-sdk-guide.md                                                                           |  11 +++-</span><br><span class=\"line\"> 10 files changed, 106 insertions(+), 199 deletions(-)</span><br><span class=\"line\"> delete mode 100644 brcc-cache/src/test/java/com/baidu/brcc/SampleTest.java</span><br><span class=\"line\"> delete mode 100644 brcc-example/src/test/java/com/baidu/brcc/example/ApplicationTest.java</span><br><span class=\"line\"> delete mode 100644 brcc-server/src/test/java/com/baidu/brcc/RccApplicationTest.java</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>8、经过上面一步，已经将对应的原仓库代码同步到你的fork仓库中了，此时执行<code>git push</code>即可完成操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git push </span><br><span class=\"line\">Total 0 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class=\"line\">To github.com:dislazy/brcc.git</span><br><span class=\"line\">   f8099cb..a5d4533  main -&gt; main</span><br></pre></td></tr></table></figure>\n<p>经过以上8个步骤，已经成功的将fork仓库的代码和原代码保持一致了，如果需要再次提pr，后期按照此步骤操作即可。</p>\n</li>\n</ul>\n\n</div>","more":"<div class=\"story post-story\"><h2 id=\"实践步骤\"><a href=\"#实践步骤\" class=\"headerlink\" title=\"实践步骤\"></a>实践步骤</h2><pre><code>通过git命令将原代码同步到我fork的代码仓库中，使用merge的方法来进行操作。下面是具体的操作命令，以brcc仓库为例.\n</code></pre>\n<ul>\n<li><p>1、进入到我的本地仓库中：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/github-me/brcc/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2、执行命令 <code>git remote -v </code> 查看远程仓库的地址<br>初始情况下，执行完命令只会存在如下两条记录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git remote -v </span><br><span class=\"line\">origin\tgit@github.com:dislazy/brcc.git (fetch)</span><br><span class=\"line\">origin\tgit@github.com:dislazy/brcc.git (push)</span><br></pre></td></tr></table></figure></li>\n<li><p>3、执行命令 <code>git remote add upstream git@github.com:baidu/brcc.git</code>  给当前仓库添加 上游仓库(upstream)<br>添加完上游仓库之后再次执行<code>git remote -v </code>，就可以看到当前的代码仓库出现了四条记录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git remote -v </span><br><span class=\"line\">origin\tgit@github.com:dislazy/brcc.git (fetch)</span><br><span class=\"line\">origin\tgit@github.com:dislazy/brcc.git (push)</span><br><span class=\"line\">upstream\tgit@github.com:baidu/brcc.git (fetch)</span><br><span class=\"line\">upstream\tgit@github.com:baidu/brcc.git (push)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>4、执行命令 <code>git status</code> 查看自己存不存在当前分支下已修改未提交的，如果有的话可以提交到你的当前分支去(前提是你的代码不是主分支)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git status</span><br><span class=\"line\">On branch main</span><br><span class=\"line\">Your branch is up to date with &#x27;origin/main&#x27;.</span><br><span class=\"line\"></span><br><span class=\"line\">nothing to commit, working tree clean</span><br></pre></td></tr></table></figure></li>\n<li><p>5、执行命令 <code>git fetch upstream</code> 抓取 baidu&#x2F;brcc 原仓库的更新</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git fetch upstream </span><br><span class=\"line\">remote: Enumerating objects: 136, done.</span><br><span class=\"line\">remote: Counting objects: 100% (110/110), done.</span><br><span class=\"line\">remote: Compressing objects: 100% (45/45), done.</span><br><span class=\"line\">remote: Total 82 (delta 32), reused 63 (delta 14), pack-reused 0</span><br><span class=\"line\">Unpacking objects: 100% (82/82), 7.48 KiB | 134.00 KiB/s, done.</span><br><span class=\"line\">From github.com:baidu/brcc</span><br><span class=\"line\"> * [new branch]      main       -&gt; upstream/main</span><br></pre></td></tr></table></figure></li>\n<li><p>6、如果你的代码不是主分支，那么执行命令 <code>git checkout main</code> 切换到代码主分支</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git checkout main</span><br><span class=\"line\">Already on &#x27;main&#x27;</span><br><span class=\"line\">Your branch is up to date with &#x27;origin/main&#x27;.</span><br></pre></td></tr></table></figure></li>\n<li><p>7、最关键命令 <code>git merge upstream/main</code>，将原代码的主分支代码merge到你的fork仓库主分支上</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git merge upstream/main </span><br><span class=\"line\">Updating f8099cb..a5d4533</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> .codecov.yml                                                                                    |   6 +-</span><br><span class=\"line\"> README.md                                                                                       | 178 ++++++++++++++++++++++++++++----------------------------</span><br><span class=\"line\"> brcc-cache/src/test/java/com/baidu/brcc/SampleTest.java                                         |  41 -------------</span><br><span class=\"line\"> brcc-example/src/test/java/com/baidu/brcc/example/ApplicationTest.java                          |  31 ----------</span><br><span class=\"line\"> brcc-sdk-starter/pom.xml                                                                        |   2 +-</span><br><span class=\"line\"> brcc-sdk/pom.xml                                                                                |   2 +-</span><br><span class=\"line\"> brcc-sdk/src/test/java/com/baidu/brcc/ConfigChangedListenerTest.java                            |   2 +-</span><br><span class=\"line\"> brcc-sdk/src/test/java/com/baidu/brcc/spring/ConfigCenterPropertyPlaceholderConfigurerTest.java |   2 +-</span><br><span class=\"line\"> brcc-server/src/test/java/com/baidu/brcc/RccApplicationTest.java                                |  30 ----------</span><br><span class=\"line\"> doc/java-sdk-guide.md                                                                           |  11 +++-</span><br><span class=\"line\"> 10 files changed, 106 insertions(+), 199 deletions(-)</span><br><span class=\"line\"> delete mode 100644 brcc-cache/src/test/java/com/baidu/brcc/SampleTest.java</span><br><span class=\"line\"> delete mode 100644 brcc-example/src/test/java/com/baidu/brcc/example/ApplicationTest.java</span><br><span class=\"line\"> delete mode 100644 brcc-server/src/test/java/com/baidu/brcc/RccApplicationTest.java</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></li>\n<li><p>8、经过上面一步，已经将对应的原仓库代码同步到你的fork仓库中了，此时执行<code>git push</code>即可完成操作</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  brcc git:(main) git push </span><br><span class=\"line\">Total 0 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class=\"line\">To github.com:dislazy/brcc.git</span><br><span class=\"line\">   f8099cb..a5d4533  main -&gt; main</span><br></pre></td></tr></table></figure>\n<p>经过以上8个步骤，已经成功的将fork仓库的代码和原代码保持一致了，如果需要再次提pr，后期按照此步骤操作即可。</p>\n</li>\n</ul>\n\n</div>","categories":[{"name":"Github","path":"api/categories/Github.json"}],"tags":[{"name":"git","path":"api/tags/git.json"},{"name":"Github","path":"api/tags/Github.json"}]}