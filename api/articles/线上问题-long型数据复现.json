{"title":"线上问题-long型数据复现","slug":"线上问题-long型数据复现","date":"2019-01-17T09:17:28.000Z","updated":"2022-06-02T01:05:59.618Z","comments":true,"path":"api/articles/线上问题-long型数据复现.json","excerpt":"起因因线上long型数据丢失精度问题未解决彻底，本地线上app端出现了该问题，探索新一步的解决方案。","covers":null,"content":"<h3 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h3><p>因<a href=\"https://blog.bosong.online/2018/12/08/6ccf37c4d7244d49b8c9df52e1218e6d/\">线上long型数据丢失精度问题</a>未解决彻底，本地线上app端出现了该问题，探索新一步的解决方案。</p>\n<h3 id=\"经过\"><a href=\"#经过\" class=\"headerlink\" title=\"经过\"></a>经过</h3><p>因线上获取该字段的接口数量较多，改动起来代价比较高，所以经过多方验证，讨论除了一套解决方案，<br>因框架为Spring boot，所以新建了以下方法注入，来解决该问题，初见成效。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.<span class=\"keyword\">module</span>.SimpleModule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.ser.std.ToStringSerializer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.converter.HttpMessageConverter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> jack</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> v 0.1 2019-01-17 14:56 </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@apiNote</span> 该类用于转换long型数据为String类型</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JsonConfig</span>  <span class=\"keyword\">extends</span> <span class=\"title class_\">WebMvcConfigurationSupport</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解决long、bigint转json丢失精度</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configureMessageConverters</span><span class=\"params\">(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">MappingJackson2HttpMessageConverter</span> <span class=\"variable\">jackson2HttpMessageConverter</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MappingJackson2HttpMessageConverter</span>();</span><br><span class=\"line\">        <span class=\"type\">ObjectMapper</span> <span class=\"variable\">objectMapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>();</span><br><span class=\"line\">        <span class=\"type\">SimpleModule</span> <span class=\"variable\">simpleModule</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleModule</span>();</span><br><span class=\"line\">        simpleModule.addSerializer(Long.class, ToStringSerializer.instance);</span><br><span class=\"line\">        simpleModule.addSerializer(Long.TYPE, ToStringSerializer.instance);</span><br><span class=\"line\">        objectMapper.registerModule(simpleModule);</span><br><span class=\"line\">        jackson2HttpMessageConverter.setObjectMapper(objectMapper);</span><br><span class=\"line\">        converters.add(jackson2HttpMessageConverter);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><p>使用了上面的方法后，问题初步得到解决，先观察一段时间，以观后效。</p>\n\n","more":"\n<h3 id=\"经过\"><a href=\"#经过\" class=\"headerlink\" title=\"经过\"></a>经过</h3><p>因线上获取该字段的接口数量较多，改动起来代价比较高，所以经过多方验证，讨论除了一套解决方案，<br>因框架为Spring boot，所以新建了以下方法注入，来解决该问题，初见成效。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.<span class=\"keyword\">module</span>.SimpleModule;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.fasterxml.jackson.databind.ser.std.ToStringSerializer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.converter.HttpMessageConverter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> jack</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@version</span> v 0.1 2019-01-17 14:56 </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@apiNote</span> 该类用于转换long型数据为String类型</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">JsonConfig</span>  <span class=\"keyword\">extends</span> <span class=\"title class_\">WebMvcConfigurationSupport</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解决long、bigint转json丢失精度</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configureMessageConverters</span><span class=\"params\">(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">MappingJackson2HttpMessageConverter</span> <span class=\"variable\">jackson2HttpMessageConverter</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MappingJackson2HttpMessageConverter</span>();</span><br><span class=\"line\">        <span class=\"type\">ObjectMapper</span> <span class=\"variable\">objectMapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>();</span><br><span class=\"line\">        <span class=\"type\">SimpleModule</span> <span class=\"variable\">simpleModule</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleModule</span>();</span><br><span class=\"line\">        simpleModule.addSerializer(Long.class, ToStringSerializer.instance);</span><br><span class=\"line\">        simpleModule.addSerializer(Long.TYPE, ToStringSerializer.instance);</span><br><span class=\"line\">        objectMapper.registerModule(simpleModule);</span><br><span class=\"line\">        jackson2HttpMessageConverter.setObjectMapper(objectMapper);</span><br><span class=\"line\">        converters.add(jackson2HttpMessageConverter);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"结果\"><a href=\"#结果\" class=\"headerlink\" title=\"结果\"></a>结果</h3><p>使用了上面的方法后，问题初步得到解决，先观察一段时间，以观后效。</p>\n\n","categories":[{"name":"Java","path":"api/categories/Java.json"}],"tags":[{"name":"Java","path":"api/tags/Java.json"}]}