{"title":"stream-常用数组操作","slug":"stream-常用数组操作","date":"2018-11-28T15:26:44.000Z","updated":"2022-06-02T01:05:59.616Z","comments":true,"path":"api/articles/stream-常用数组操作.json","excerpt":"对User集合进行升序，倒序操作对listResult进行排序,根据伴随度进行降序,根据集合中对象User中的伴随度进行倒序排列…reversed(),默认正序,reversed反转后即倒序;","covers":null,"content":"<h3 id=\"对User集合进行升序，倒序操作\"><a href=\"#对User集合进行升序，倒序操作\" class=\"headerlink\" title=\"对User集合进行升序，倒序操作\"></a>对User集合进行升序，倒序操作</h3><p>对listResult进行排序,根据伴随度进行降序,根据集合中对象User中的伴随度进行倒序排列…reversed(),默认正序,reversed反转后即倒序;</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;User&gt; collect = listResult.stream()</span><br><span class=\"line\">       .sorted(Comparator.comparing(User::getUserId()).reversed())</span><br><span class=\"line\">       .collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"过滤User集合中符合条件的结果\"><a href=\"#过滤User集合中符合条件的结果\" class=\"headerlink\" title=\"过滤User集合中符合条件的结果\"></a>过滤User集合中符合条件的结果</h3><p>过滤出User中UserId大于1的结果,firstA中存放的都是的大于1的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;User&gt; firstA = listResult.stream()</span><br><span class=\"line\">               .filter(User -&gt; user.getUserId() &gt;= 1)</span><br><span class=\"line\">               .collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"将User集合按照UserId从小到大重新进行排序\"><a href=\"#将User集合按照UserId从小到大重新进行排序\" class=\"headerlink\" title=\"将User集合按照UserId从小到大重新进行排序\"></a>将User集合按照UserId从小到大重新进行排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;User&gt; result = listResult.stream()</span><br><span class=\"line\">      .sorted(Comparator.comparing(User::getUserId()))</span><br><span class=\"line\">      .collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"提取出User集合中的UserId重新生成一个新的数组\"><a href=\"#提取出User集合中的UserId重新生成一个新的数组\" class=\"headerlink\" title=\"提取出User集合中的UserId重新生成一个新的数组\"></a>提取出User集合中的UserId重新生成一个新的数组</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;Integer&gt; collect = listResult.stream().map(e-&gt;e.getUserId()).collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"按照某个主键来讲User集合分别归类转化成map\"><a href=\"#按照某个主键来讲User集合分别归类转化成map\" class=\"headerlink\" title=\"按照某个主键来讲User集合分别归类转化成map\"></a>按照某个主键来讲User集合分别归类转化成map</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;Integer, User&gt; map = listResult.stream().collect(Collectors.toMap(User::getUserId, User -&gt; User));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","more":"\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;User&gt; collect = listResult.stream()</span><br><span class=\"line\">       .sorted(Comparator.comparing(User::getUserId()).reversed())</span><br><span class=\"line\">       .collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"过滤User集合中符合条件的结果\"><a href=\"#过滤User集合中符合条件的结果\" class=\"headerlink\" title=\"过滤User集合中符合条件的结果\"></a>过滤User集合中符合条件的结果</h3><p>过滤出User中UserId大于1的结果,firstA中存放的都是的大于1的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;User&gt; firstA = listResult.stream()</span><br><span class=\"line\">               .filter(User -&gt; user.getUserId() &gt;= 1)</span><br><span class=\"line\">               .collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"将User集合按照UserId从小到大重新进行排序\"><a href=\"#将User集合按照UserId从小到大重新进行排序\" class=\"headerlink\" title=\"将User集合按照UserId从小到大重新进行排序\"></a>将User集合按照UserId从小到大重新进行排序</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;User&gt; result = listResult.stream()</span><br><span class=\"line\">      .sorted(Comparator.comparing(User::getUserId()))</span><br><span class=\"line\">      .collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"提取出User集合中的UserId重新生成一个新的数组\"><a href=\"#提取出User集合中的UserId重新生成一个新的数组\" class=\"headerlink\" title=\"提取出User集合中的UserId重新生成一个新的数组\"></a>提取出User集合中的UserId重新生成一个新的数组</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List&lt;Integer&gt; collect = listResult.stream().map(e-&gt;e.getUserId()).collect(Collectors.toList());</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"按照某个主键来讲User集合分别归类转化成map\"><a href=\"#按照某个主键来讲User集合分别归类转化成map\" class=\"headerlink\" title=\"按照某个主键来讲User集合分别归类转化成map\"></a>按照某个主键来讲User集合分别归类转化成map</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Map&lt;Integer, User&gt; map = listResult.stream().collect(Collectors.toMap(User::getUserId, User -&gt; User));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","categories":[{"name":"Java","path":"api/categories/Java.json"}],"tags":[{"name":"stream","path":"api/tags/stream.json"}]}