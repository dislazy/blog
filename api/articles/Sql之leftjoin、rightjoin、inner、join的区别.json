{"title":"sql之left join、right join、inner join的区别","slug":"Sql之leftjoin、rightjoin、inner、join的区别","date":"2018-10-14T09:33:43.000Z","updated":"2022-06-02T01:05:59.615Z","comments":true,"path":"api/articles/Sql之leftjoin、rightjoin、inner、join的区别.json","excerpt":"left join(左联接) 返回包括左表中的所有记录和右表中联结字段相等的记录<br>right join(右联接) 返回包括右表中的所有记录和左表中联结字段相等的记录<br>inner join(等值连接) 只返回两个表中联结字段相等的行举例如下：<br>表A记录如下：","covers":null,"content":"<p>left join(左联接) 返回包括左表中的所有记录和右表中联结字段相等的记录<br>right join(右联接) 返回包括右表中的所有记录和左表中联结字段相等的记录<br>inner join(等值连接) 只返回两个表中联结字段相等的行</p>\n<p>举例如下：<br>表A记录如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aID　　　　　aNum</span><br><span class=\"line\">1　　　　　a20050111</span><br><span class=\"line\">2　　　　　a20050112</span><br><span class=\"line\">3　　　　　a20050113</span><br><span class=\"line\">4　　　　　a20050114</span><br><span class=\"line\">5　　　　　a20050115</span><br></pre></td></tr></table></figure>\n<p>表B记录如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bID　　　　　bName</span><br><span class=\"line\">1　　　　　2006032401</span><br><span class=\"line\">2　　　　　2006032402</span><br><span class=\"line\">3　　　　　2006032403</span><br><span class=\"line\">4　　　　　2006032404</span><br><span class=\"line\">8　　　　　2006032408</span><br></pre></td></tr></table></figure>\n<p>1.left join<br>sql语句如下: </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from A</span><br><span class=\"line\">left join B </span><br><span class=\"line\">on A.aID = B.bID</span><br></pre></td></tr></table></figure>\n<p>结果如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aID　　　　　aNum　　　　　bID　　　　　bName</span><br><span class=\"line\">1　　　　　a20050111　　　　1　　　　　2006032401</span><br><span class=\"line\">2　　　　　a20050112　　　　2　　　　　2006032402</span><br><span class=\"line\">3　　　　　a20050113　　　　3　　　　　2006032403</span><br><span class=\"line\">4　　　　　a20050114　　　　4　　　　　2006032404</span><br><span class=\"line\">5　　　　　a20050115　　　　NULL　　　　　NULL</span><br></pre></td></tr></table></figure>\n<p>（所影响的行数为 5 行）<br>结果说明:<br>left join是以A表的记录为基础的,A可以看成左表,B可以看成右表,left join是以左表为准的.<br>换句话说,左表(A)的记录将会全部表示出来,而右表(B)只会显示符合搜索条件的记录(例子中为: A.aID &#x3D; B.bID).<br>B表记录不足的地方均为NULL.</p>\n<p>2.right join<br>sql语句如下: </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from A</span><br><span class=\"line\">right join B </span><br><span class=\"line\">on A.aID = B.bID</span><br></pre></td></tr></table></figure>\n<p>结果如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aID　　　　　aNum　　　　　bID　　　　　bName</span><br><span class=\"line\">1　　　　　a20050111　　　　1　　　　　2006032401</span><br><span class=\"line\">2　　　　　a20050112　　　　2　　　　　2006032402</span><br><span class=\"line\">3　　　　　a20050113　　　　3　　　　　2006032403</span><br><span class=\"line\">4　　　　　a20050114　　　　4　　　　　2006032404</span><br><span class=\"line\">NULL　　　　　NULL　　　　　8　　　　　2006032408</span><br></pre></td></tr></table></figure>\n<p>（所影响的行数为 5 行）<br>结果说明:<br>仔细观察一下,就会发现,和left join的结果刚好相反,这次是以右表(B)为基础的,A表不足的地方用NULL填充.</p>\n<p>3.inner join<br>sql语句如下: </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from A</span><br><span class=\"line\">innerjoin B </span><br><span class=\"line\">on A.aID = B.bID</span><br></pre></td></tr></table></figure>\n<p>结果如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aID　　　　　aNum　　　　　bID　　　　　bName</span><br><span class=\"line\">1　　　　　a20050111　　　　1　　　　　2006032401</span><br><span class=\"line\">2　　　　　a20050112　　　　2　　　　　2006032402</span><br><span class=\"line\">3　　　　　a20050113　　　　3　　　　　2006032403</span><br><span class=\"line\">4　　　　　a20050114　　　　4　　　　　2006032404</span><br></pre></td></tr></table></figure>\n<p>结果说明:<br>很明显,这里只显示出了 A.aID &#x3D; B.bID的记录.这说明inner join并不以谁为基础,它只显示符合条件的记录.<br>注:<br>LEFT JOIN操作用于在任何的 FROM 子句中，组合来源表的记录。使用 LEFT JOIN 运算来创建一个左边外部联接。左边外部联接将包含了从第一个（左边）开始的两个表中的全部记录，即使在第二个（右边）表中并没有相符值的记录。</p>\n<p>语法：<code>FROM table1 LEFT JOIN table2 ON table1.field1 compopr table2.field2</code></p>\n<p>说明：table1, table2参数用于指定要将记录组合的表的名称。<br>field1, field2参数指定被联接的字段的名称。且这些字段必须有相同的数据类型及包含相同类型的数据，但它们不需要有相同的名称。<br>compopr参数指定关系比较运算符：”&#x3D;”， “&lt;”， “&gt;”， “&lt;&#x3D;”， “&gt;&#x3D;” 或 “&lt;&gt;”。<br>如果在INNER JOIN操作中要联接包含Memo 数据类型或 OLE Object 数据类型数据的字段，将会发生错误. </p>\n<p>转载自<a href=\"https://blog.csdn.net/iloveyin/article/details/50855101\">https://blog.csdn.net/iloveyin/article/details/50855101</a></p>\n\n","more":"\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aID　　　　　aNum</span><br><span class=\"line\">1　　　　　a20050111</span><br><span class=\"line\">2　　　　　a20050112</span><br><span class=\"line\">3　　　　　a20050113</span><br><span class=\"line\">4　　　　　a20050114</span><br><span class=\"line\">5　　　　　a20050115</span><br></pre></td></tr></table></figure>\n<p>表B记录如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bID　　　　　bName</span><br><span class=\"line\">1　　　　　2006032401</span><br><span class=\"line\">2　　　　　2006032402</span><br><span class=\"line\">3　　　　　2006032403</span><br><span class=\"line\">4　　　　　2006032404</span><br><span class=\"line\">8　　　　　2006032408</span><br></pre></td></tr></table></figure>\n<p>1.left join<br>sql语句如下: </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from A</span><br><span class=\"line\">left join B </span><br><span class=\"line\">on A.aID = B.bID</span><br></pre></td></tr></table></figure>\n<p>结果如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aID　　　　　aNum　　　　　bID　　　　　bName</span><br><span class=\"line\">1　　　　　a20050111　　　　1　　　　　2006032401</span><br><span class=\"line\">2　　　　　a20050112　　　　2　　　　　2006032402</span><br><span class=\"line\">3　　　　　a20050113　　　　3　　　　　2006032403</span><br><span class=\"line\">4　　　　　a20050114　　　　4　　　　　2006032404</span><br><span class=\"line\">5　　　　　a20050115　　　　NULL　　　　　NULL</span><br></pre></td></tr></table></figure>\n<p>（所影响的行数为 5 行）<br>结果说明:<br>left join是以A表的记录为基础的,A可以看成左表,B可以看成右表,left join是以左表为准的.<br>换句话说,左表(A)的记录将会全部表示出来,而右表(B)只会显示符合搜索条件的记录(例子中为: A.aID &#x3D; B.bID).<br>B表记录不足的地方均为NULL.</p>\n<p>2.right join<br>sql语句如下: </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from A</span><br><span class=\"line\">right join B </span><br><span class=\"line\">on A.aID = B.bID</span><br></pre></td></tr></table></figure>\n<p>结果如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aID　　　　　aNum　　　　　bID　　　　　bName</span><br><span class=\"line\">1　　　　　a20050111　　　　1　　　　　2006032401</span><br><span class=\"line\">2　　　　　a20050112　　　　2　　　　　2006032402</span><br><span class=\"line\">3　　　　　a20050113　　　　3　　　　　2006032403</span><br><span class=\"line\">4　　　　　a20050114　　　　4　　　　　2006032404</span><br><span class=\"line\">NULL　　　　　NULL　　　　　8　　　　　2006032408</span><br></pre></td></tr></table></figure>\n<p>（所影响的行数为 5 行）<br>结果说明:<br>仔细观察一下,就会发现,和left join的结果刚好相反,这次是以右表(B)为基础的,A表不足的地方用NULL填充.</p>\n<p>3.inner join<br>sql语句如下: </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select * from A</span><br><span class=\"line\">innerjoin B </span><br><span class=\"line\">on A.aID = B.bID</span><br></pre></td></tr></table></figure>\n<p>结果如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aID　　　　　aNum　　　　　bID　　　　　bName</span><br><span class=\"line\">1　　　　　a20050111　　　　1　　　　　2006032401</span><br><span class=\"line\">2　　　　　a20050112　　　　2　　　　　2006032402</span><br><span class=\"line\">3　　　　　a20050113　　　　3　　　　　2006032403</span><br><span class=\"line\">4　　　　　a20050114　　　　4　　　　　2006032404</span><br></pre></td></tr></table></figure>\n<p>结果说明:<br>很明显,这里只显示出了 A.aID &#x3D; B.bID的记录.这说明inner join并不以谁为基础,它只显示符合条件的记录.<br>注:<br>LEFT JOIN操作用于在任何的 FROM 子句中，组合来源表的记录。使用 LEFT JOIN 运算来创建一个左边外部联接。左边外部联接将包含了从第一个（左边）开始的两个表中的全部记录，即使在第二个（右边）表中并没有相符值的记录。</p>\n<p>语法：<code>FROM table1 LEFT JOIN table2 ON table1.field1 compopr table2.field2</code></p>\n<p>说明：table1, table2参数用于指定要将记录组合的表的名称。<br>field1, field2参数指定被联接的字段的名称。且这些字段必须有相同的数据类型及包含相同类型的数据，但它们不需要有相同的名称。<br>compopr参数指定关系比较运算符：”&#x3D;”， “&lt;”， “&gt;”， “&lt;&#x3D;”， “&gt;&#x3D;” 或 “&lt;&gt;”。<br>如果在INNER JOIN操作中要联接包含Memo 数据类型或 OLE Object 数据类型数据的字段，将会发生错误. </p>\n<p>转载自<a href=\"https://blog.csdn.net/iloveyin/article/details/50855101\">https://blog.csdn.net/iloveyin/article/details/50855101</a></p>\n\n","categories":[{"name":"数据库","path":"api/categories/数据库.json"}],"tags":[{"name":"mysql","path":"api/tags/mysql.json"}]}