{"title":"Docker制作jdk镜像","slug":"Docker制作jdk镜像","date":"2018-10-14T09:55:13.000Z","updated":"2022-06-02T01:05:59.611Z","comments":true,"path":"api/articles/Docker制作jdk镜像.json","excerpt":"由于相关需求，现有的docker制作的jdk镜像是Java8早期版本的镜像，在安全性上存在较大的问题，所以计划对docker依赖的系统以及jdk进行升级操作。这其中遇到了一些问题，不过都顺利的圆满解决了，下面来具体聊一聊细节把docker制作JDK镜像选型","covers":null,"content":"<p>由于相关需求，现有的docker制作的jdk镜像是Java8早期版本的镜像，在安全性上存在较大的问题，所以计划对docker依赖的系统以及jdk进行升级操作。这其中遇到了一些问题，不过都顺利的圆满解决了，下面来具体聊一聊细节把</p>\n<h3 id=\"docker制作JDK镜像选型\"><a href=\"#docker制作JDK镜像选型\" class=\"headerlink\" title=\"docker制作JDK镜像选型\"></a>docker制作JDK镜像选型</h3><p>为了减小容器的体积，所以考虑使用alpine的镜像，这次选择alpine没有做版本相关的限制，考虑最新版本的镜像在安全性上会有一个较大的提升，目前经过阿里云的安全扫描，相关漏洞的个数为0；</p>\n<p>JDK选择的也是JDK8的最新长期支持版，JDK8相对来说目前使用比较广泛，而且稳定性较高。</p>\n<h3 id=\"docker制作JDK第一版的过程\"><a href=\"#docker制作JDK第一版的过程\" class=\"headerlink\" title=\"docker制作JDK第一版的过程\"></a>docker制作JDK第一版的过程</h3><p>由于alpine镜像作为极小型的Linux容器，它的运行环境是没法直接运行JDK的，所以需要新增一些依赖来进行相关兼容，在此过程中安装了glibc-2.31-r0.apk，该包在Github上下载的，由于服务器带宽较低，所以下载速度奇慢，所以自己将对应的包下载下来，放到了腾讯云的COS上供自己下载使用。</p>\n<p>下面是第一版Dockerfile的内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM alpine:latest</span><br><span class=\"line\"></span><br><span class=\"line\">MAINTAINER dislazy2019@outlook.com</span><br><span class=\"line\"></span><br><span class=\"line\">RUN  echo http://mirrors.aliyun.com/alpine/v3.7/main &gt; /etc/apk/repositories &amp;&amp; \\</span><br><span class=\"line\">echo http://mirrors.aliyun.com/alpine/v3.7/community &gt;&gt; /etc/apk/repositories</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apk update &amp;&amp; apk upgrade</span><br><span class=\"line\"></span><br><span class=\"line\">RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://imagecdn.bosong.online/sgerrand.rsa.pub &amp;&amp; \\</span><br><span class=\"line\">    wget https://imagecdn.bosong.online/glibc-2.31-r0.apk &amp;&amp; \\</span><br><span class=\"line\">    apk add glibc-bin-2.31-r0.apk</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ADD jdk1.8.0_231 /usr/local</span><br><span class=\"line\">ENV JAVA_HOME=/usr/local/jdk1.8.0_231</span><br><span class=\"line\">ENV CLASSPATH=$JAVA_HOME/bin</span><br><span class=\"line\">ENV JRE_HOME=/usr/local/jdk1.8.0_231/jre</span><br><span class=\"line\">ENV PATH=$JAVA_HOME/bin:$PATH</span><br><span class=\"line\">CMD [&quot;java&quot;,&quot;-version&quot;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在上面的镜像中，只安装了运行JDK所需要的相关包以及将JDK放到了容器文件中，其实在此之前有一步是需要对JDK进行内容的删减，删减一些多余的JAR包和介绍文件，来达到减少容器体积的目的。</p>\n<h3 id=\"时区问题\"><a href=\"#时区问题\" class=\"headerlink\" title=\"时区问题\"></a>时区问题</h3><p>JDK镜像制作成功后，很顺利的推到了阿里云的镜像仓库中，并且迅速进行服务的打包部署，一切都进行的很顺利，服务也正常运行并启动。</p>\n<p>后来在查看日志的过程中，发现服务运行日志的时差达到了8个小时，马上想到了没设置正确的时区，导致Java运行获取的当地时间不正确，这问题在生产中是致命的，然后迅速进行第二次镜像升级改造，本次主要正确设置了时区，使Java进行按照本地时间运行。</p>\n<p>下面是第二版Dockerfile的内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM alpine:latest</span><br><span class=\"line\"></span><br><span class=\"line\">MAINTAINER dislazy2019@outlook.com</span><br><span class=\"line\"></span><br><span class=\"line\">RUN  echo http://mirrors.aliyun.com/alpine/v3.7/main &gt; /etc/apk/repositories &amp;&amp; \\</span><br><span class=\"line\">echo http://mirrors.aliyun.com/alpine/v3.7/community &gt;&gt; /etc/apk/repositories</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apk update &amp;&amp; apk upgrade &amp;&amp; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone</span><br><span class=\"line\"></span><br><span class=\"line\">RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://imagecdn.bosong.online/sgerrand.rsa.pub &amp;&amp; \\</span><br><span class=\"line\">    wget https://imagecdn.bosong.online/glibc-2.31-r0.apk &amp;&amp; \\</span><br><span class=\"line\">    apk add glibc-bin-2.31-r0.apk</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ADD jdk1.8.0_231 /usr/local</span><br><span class=\"line\">ENV JAVA_HOME=/usr/local/jdk1.8.0_231</span><br><span class=\"line\">ENV CLASSPATH=$JAVA_HOME/bin</span><br><span class=\"line\">ENV JRE_HOME=/usr/local/jdk1.8.0_231/jre</span><br><span class=\"line\">ENV PATH=$JAVA_HOME/bin:$PATH</span><br><span class=\"line\">CMD [&quot;java&quot;,&quot;-version&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>上面的镜像设置了时区文件，顺利解决了时区的问题。</p>\n<h3 id=\"编码问题\"><a href=\"#编码问题\" class=\"headerlink\" title=\"编码问题\"></a>编码问题</h3><p>作为一个程序员，对乱码这个一定会异常的敏感，在大学计算机的课堂上，对于这个问题始终会强调，编码问题是数据可读性的重要保障，一个不慎，可能全盘皆输。</p>\n<p>问题的发现比较偶然，因为我平常在工作中养成的工作习惯是日志基本使用英文，能不使用中文尽量不使用，所以一直没发现中文编码存在问题，后来因为接入了美团Cat，想试试告警效果，然后发现相关告警发送到企业微信的时候发现是乱码，此时才想到没有对乱码问题进行及时设置，此时有了第三版本的JDK镜像。</p>\n<p>下面是第三版本的Dokcerfile</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM alpine:latest</span><br><span class=\"line\"></span><br><span class=\"line\">MAINTAINER dislazy2019@outlook.com</span><br><span class=\"line\"></span><br><span class=\"line\">RUN  echo http://mirrors.aliyun.com/alpine/v3.7/main &gt; /etc/apk/repositories &amp;&amp; \\</span><br><span class=\"line\">echo http://mirrors.aliyun.com/alpine/v3.7/community &gt;&gt; /etc/apk/repositories</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apk update &amp;&amp; apk upgrade &amp;&amp; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone</span><br><span class=\"line\"></span><br><span class=\"line\">RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://imagecdn.bosong.online/sgerrand.rsa.pub &amp;&amp; \\</span><br><span class=\"line\">    wget https://imagecdn.bosong.online/glibc-2.31-r0.apk &amp;&amp; \\</span><br><span class=\"line\">    wget https://imagecdn.bosong.online/glibc-bin-2.31-r0.apk &amp;&amp; \\</span><br><span class=\"line\">    wget https://imagecdn.bosong.online/glibc-i18n-2.31-r0.apk &amp;&amp; \\</span><br><span class=\"line\">    apk add glibc-bin-2.31-r0.apk glibc-i18n-2.31-r0.apk glibc-2.31-r0.apk</span><br><span class=\"line\">#复制本地编辑的locale.md</span><br><span class=\"line\">COPY ./locale.md /locale.md</span><br><span class=\"line\">#此时设置utfu编码</span><br><span class=\"line\">RUN cat locale.md | xargs -i /usr/glibc-compat/bin/localedef -i &#123;&#125; -f UTF-8 &#123;&#125;.UTF-8</span><br><span class=\"line\"></span><br><span class=\"line\">ADD jdk1.8.0_231 /usr/local</span><br><span class=\"line\">ENV JAVA_HOME=/usr/local/jdk1.8.0_231</span><br><span class=\"line\">ENV CLASSPATH=$JAVA_HOME/bin</span><br><span class=\"line\">ENV JRE_HOME=/usr/local/jdk1.8.0_231/jre</span><br><span class=\"line\">ENV PATH=$JAVA_HOME/bin:$PATH</span><br><span class=\"line\">ENV LANG=en_US.UTF-8</span><br><span class=\"line\">ENV LANGUAGE=en_US.UTF-8</span><br><span class=\"line\">CMD [&quot;java&quot;,&quot;-version&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>为了加快镜像的构建速度，所以把必要的jar包都放到了腾讯云的COS上，以便于快速下载以及备份。</p>\n<p>其中locale.md文件内容如下,有些不必要用到的我都给移除掉了，能大大节省镜像的构建速度</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">el_CY</span><br><span class=\"line\">el_GR</span><br><span class=\"line\">en_AG</span><br><span class=\"line\">en_AU</span><br><span class=\"line\">en_BW</span><br><span class=\"line\">en_CA</span><br><span class=\"line\">en_DK</span><br><span class=\"line\">en_GB</span><br><span class=\"line\">en_HK</span><br><span class=\"line\">en_IE</span><br><span class=\"line\">en_IN</span><br><span class=\"line\">en_NG</span><br><span class=\"line\">en_NZ</span><br><span class=\"line\">en_PH</span><br><span class=\"line\">en_SG</span><br><span class=\"line\">en_US</span><br><span class=\"line\">en_ZA</span><br><span class=\"line\">en_ZM</span><br><span class=\"line\">en_ZW</span><br><span class=\"line\">es_AR</span><br><span class=\"line\">es_BO</span><br><span class=\"line\">es_CL</span><br><span class=\"line\">es_CO</span><br><span class=\"line\">es_CR</span><br><span class=\"line\">es_CU</span><br><span class=\"line\">es_DO</span><br><span class=\"line\">es_EC</span><br><span class=\"line\">es_ES</span><br><span class=\"line\">es_GT</span><br><span class=\"line\">es_HN</span><br><span class=\"line\">es_MX</span><br><span class=\"line\">es_NI</span><br><span class=\"line\">es_PA</span><br><span class=\"line\">es_PE</span><br><span class=\"line\">es_PR</span><br><span class=\"line\">es_PY</span><br><span class=\"line\">es_SV</span><br><span class=\"line\">es_US</span><br><span class=\"line\">es_UY</span><br><span class=\"line\">es_VE</span><br><span class=\"line\">et_EE</span><br><span class=\"line\">eu_ES</span><br><span class=\"line\">zh_CN</span><br><span class=\"line\">zh_HK</span><br><span class=\"line\">zh_SG</span><br><span class=\"line\">zh_TW</span><br><span class=\"line\">zu_ZA</span><br></pre></td></tr></table></figure>\n\n<p>该问题比较经典，在github上也有解决方案，主要原因就是alpine镜像本身原因没有对一些需要的特性需要支持，顺利解决了时区问题以及乱码问题，服务目前平稳运行，可以大大松口气。</p>\n<h3 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h3><p>以前用别人制作好的JDK镜像，发现很香，很多问题都不需要去考虑，直接拿来就用。</p>\n<p>在自己制作并投入使用的时候会出现很多状况，所以我们制作镜像前后最好先了解一下有哪些坑，提前发现并且避免掉，这样才能减少错误，快速做好镜像。</p>\n\n","more":"<p>为了减小容器的体积，所以考虑使用alpine的镜像，这次选择alpine没有做版本相关的限制，考虑最新版本的镜像在安全性上会有一个较大的提升，目前经过阿里云的安全扫描，相关漏洞的个数为0；</p>\n<p>JDK选择的也是JDK8的最新长期支持版，JDK8相对来说目前使用比较广泛，而且稳定性较高。</p>\n<h3 id=\"docker制作JDK第一版的过程\"><a href=\"#docker制作JDK第一版的过程\" class=\"headerlink\" title=\"docker制作JDK第一版的过程\"></a>docker制作JDK第一版的过程</h3><p>由于alpine镜像作为极小型的Linux容器，它的运行环境是没法直接运行JDK的，所以需要新增一些依赖来进行相关兼容，在此过程中安装了glibc-2.31-r0.apk，该包在Github上下载的，由于服务器带宽较低，所以下载速度奇慢，所以自己将对应的包下载下来，放到了腾讯云的COS上供自己下载使用。</p>\n<p>下面是第一版Dockerfile的内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM alpine:latest</span><br><span class=\"line\"></span><br><span class=\"line\">MAINTAINER dislazy2019@outlook.com</span><br><span class=\"line\"></span><br><span class=\"line\">RUN  echo http://mirrors.aliyun.com/alpine/v3.7/main &gt; /etc/apk/repositories &amp;&amp; \\</span><br><span class=\"line\">echo http://mirrors.aliyun.com/alpine/v3.7/community &gt;&gt; /etc/apk/repositories</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apk update &amp;&amp; apk upgrade</span><br><span class=\"line\"></span><br><span class=\"line\">RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://imagecdn.bosong.online/sgerrand.rsa.pub &amp;&amp; \\</span><br><span class=\"line\">    wget https://imagecdn.bosong.online/glibc-2.31-r0.apk &amp;&amp; \\</span><br><span class=\"line\">    apk add glibc-bin-2.31-r0.apk</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ADD jdk1.8.0_231 /usr/local</span><br><span class=\"line\">ENV JAVA_HOME=/usr/local/jdk1.8.0_231</span><br><span class=\"line\">ENV CLASSPATH=$JAVA_HOME/bin</span><br><span class=\"line\">ENV JRE_HOME=/usr/local/jdk1.8.0_231/jre</span><br><span class=\"line\">ENV PATH=$JAVA_HOME/bin:$PATH</span><br><span class=\"line\">CMD [&quot;java&quot;,&quot;-version&quot;]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>在上面的镜像中，只安装了运行JDK所需要的相关包以及将JDK放到了容器文件中，其实在此之前有一步是需要对JDK进行内容的删减，删减一些多余的JAR包和介绍文件，来达到减少容器体积的目的。</p>\n<h3 id=\"时区问题\"><a href=\"#时区问题\" class=\"headerlink\" title=\"时区问题\"></a>时区问题</h3><p>JDK镜像制作成功后，很顺利的推到了阿里云的镜像仓库中，并且迅速进行服务的打包部署，一切都进行的很顺利，服务也正常运行并启动。</p>\n<p>后来在查看日志的过程中，发现服务运行日志的时差达到了8个小时，马上想到了没设置正确的时区，导致Java运行获取的当地时间不正确，这问题在生产中是致命的，然后迅速进行第二次镜像升级改造，本次主要正确设置了时区，使Java进行按照本地时间运行。</p>\n<p>下面是第二版Dockerfile的内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM alpine:latest</span><br><span class=\"line\"></span><br><span class=\"line\">MAINTAINER dislazy2019@outlook.com</span><br><span class=\"line\"></span><br><span class=\"line\">RUN  echo http://mirrors.aliyun.com/alpine/v3.7/main &gt; /etc/apk/repositories &amp;&amp; \\</span><br><span class=\"line\">echo http://mirrors.aliyun.com/alpine/v3.7/community &gt;&gt; /etc/apk/repositories</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apk update &amp;&amp; apk upgrade &amp;&amp; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone</span><br><span class=\"line\"></span><br><span class=\"line\">RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://imagecdn.bosong.online/sgerrand.rsa.pub &amp;&amp; \\</span><br><span class=\"line\">    wget https://imagecdn.bosong.online/glibc-2.31-r0.apk &amp;&amp; \\</span><br><span class=\"line\">    apk add glibc-bin-2.31-r0.apk</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ADD jdk1.8.0_231 /usr/local</span><br><span class=\"line\">ENV JAVA_HOME=/usr/local/jdk1.8.0_231</span><br><span class=\"line\">ENV CLASSPATH=$JAVA_HOME/bin</span><br><span class=\"line\">ENV JRE_HOME=/usr/local/jdk1.8.0_231/jre</span><br><span class=\"line\">ENV PATH=$JAVA_HOME/bin:$PATH</span><br><span class=\"line\">CMD [&quot;java&quot;,&quot;-version&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>上面的镜像设置了时区文件，顺利解决了时区的问题。</p>\n<h3 id=\"编码问题\"><a href=\"#编码问题\" class=\"headerlink\" title=\"编码问题\"></a>编码问题</h3><p>作为一个程序员，对乱码这个一定会异常的敏感，在大学计算机的课堂上，对于这个问题始终会强调，编码问题是数据可读性的重要保障，一个不慎，可能全盘皆输。</p>\n<p>问题的发现比较偶然，因为我平常在工作中养成的工作习惯是日志基本使用英文，能不使用中文尽量不使用，所以一直没发现中文编码存在问题，后来因为接入了美团Cat，想试试告警效果，然后发现相关告警发送到企业微信的时候发现是乱码，此时才想到没有对乱码问题进行及时设置，此时有了第三版本的JDK镜像。</p>\n<p>下面是第三版本的Dokcerfile</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM alpine:latest</span><br><span class=\"line\"></span><br><span class=\"line\">MAINTAINER dislazy2019@outlook.com</span><br><span class=\"line\"></span><br><span class=\"line\">RUN  echo http://mirrors.aliyun.com/alpine/v3.7/main &gt; /etc/apk/repositories &amp;&amp; \\</span><br><span class=\"line\">echo http://mirrors.aliyun.com/alpine/v3.7/community &gt;&gt; /etc/apk/repositories</span><br><span class=\"line\"></span><br><span class=\"line\">RUN apk update &amp;&amp; apk upgrade &amp;&amp; ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo &quot;Asia/Shanghai&quot; &gt; /etc/timezone</span><br><span class=\"line\"></span><br><span class=\"line\">RUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://imagecdn.bosong.online/sgerrand.rsa.pub &amp;&amp; \\</span><br><span class=\"line\">    wget https://imagecdn.bosong.online/glibc-2.31-r0.apk &amp;&amp; \\</span><br><span class=\"line\">    wget https://imagecdn.bosong.online/glibc-bin-2.31-r0.apk &amp;&amp; \\</span><br><span class=\"line\">    wget https://imagecdn.bosong.online/glibc-i18n-2.31-r0.apk &amp;&amp; \\</span><br><span class=\"line\">    apk add glibc-bin-2.31-r0.apk glibc-i18n-2.31-r0.apk glibc-2.31-r0.apk</span><br><span class=\"line\">#复制本地编辑的locale.md</span><br><span class=\"line\">COPY ./locale.md /locale.md</span><br><span class=\"line\">#此时设置utfu编码</span><br><span class=\"line\">RUN cat locale.md | xargs -i /usr/glibc-compat/bin/localedef -i &#123;&#125; -f UTF-8 &#123;&#125;.UTF-8</span><br><span class=\"line\"></span><br><span class=\"line\">ADD jdk1.8.0_231 /usr/local</span><br><span class=\"line\">ENV JAVA_HOME=/usr/local/jdk1.8.0_231</span><br><span class=\"line\">ENV CLASSPATH=$JAVA_HOME/bin</span><br><span class=\"line\">ENV JRE_HOME=/usr/local/jdk1.8.0_231/jre</span><br><span class=\"line\">ENV PATH=$JAVA_HOME/bin:$PATH</span><br><span class=\"line\">ENV LANG=en_US.UTF-8</span><br><span class=\"line\">ENV LANGUAGE=en_US.UTF-8</span><br><span class=\"line\">CMD [&quot;java&quot;,&quot;-version&quot;]</span><br></pre></td></tr></table></figure>\n\n<p>为了加快镜像的构建速度，所以把必要的jar包都放到了腾讯云的COS上，以便于快速下载以及备份。</p>\n<p>其中locale.md文件内容如下,有些不必要用到的我都给移除掉了，能大大节省镜像的构建速度</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">el_CY</span><br><span class=\"line\">el_GR</span><br><span class=\"line\">en_AG</span><br><span class=\"line\">en_AU</span><br><span class=\"line\">en_BW</span><br><span class=\"line\">en_CA</span><br><span class=\"line\">en_DK</span><br><span class=\"line\">en_GB</span><br><span class=\"line\">en_HK</span><br><span class=\"line\">en_IE</span><br><span class=\"line\">en_IN</span><br><span class=\"line\">en_NG</span><br><span class=\"line\">en_NZ</span><br><span class=\"line\">en_PH</span><br><span class=\"line\">en_SG</span><br><span class=\"line\">en_US</span><br><span class=\"line\">en_ZA</span><br><span class=\"line\">en_ZM</span><br><span class=\"line\">en_ZW</span><br><span class=\"line\">es_AR</span><br><span class=\"line\">es_BO</span><br><span class=\"line\">es_CL</span><br><span class=\"line\">es_CO</span><br><span class=\"line\">es_CR</span><br><span class=\"line\">es_CU</span><br><span class=\"line\">es_DO</span><br><span class=\"line\">es_EC</span><br><span class=\"line\">es_ES</span><br><span class=\"line\">es_GT</span><br><span class=\"line\">es_HN</span><br><span class=\"line\">es_MX</span><br><span class=\"line\">es_NI</span><br><span class=\"line\">es_PA</span><br><span class=\"line\">es_PE</span><br><span class=\"line\">es_PR</span><br><span class=\"line\">es_PY</span><br><span class=\"line\">es_SV</span><br><span class=\"line\">es_US</span><br><span class=\"line\">es_UY</span><br><span class=\"line\">es_VE</span><br><span class=\"line\">et_EE</span><br><span class=\"line\">eu_ES</span><br><span class=\"line\">zh_CN</span><br><span class=\"line\">zh_HK</span><br><span class=\"line\">zh_SG</span><br><span class=\"line\">zh_TW</span><br><span class=\"line\">zu_ZA</span><br></pre></td></tr></table></figure>\n\n<p>该问题比较经典，在github上也有解决方案，主要原因就是alpine镜像本身原因没有对一些需要的特性需要支持，顺利解决了时区问题以及乱码问题，服务目前平稳运行，可以大大松口气。</p>\n<h3 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h3><p>以前用别人制作好的JDK镜像，发现很香，很多问题都不需要去考虑，直接拿来就用。</p>\n<p>在自己制作并投入使用的时候会出现很多状况，所以我们制作镜像前后最好先了解一下有哪些坑，提前发现并且避免掉，这样才能减少错误，快速做好镜像。</p>\n\n","categories":[{"name":"Docker","path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","path":"api/tags/Docker.json"}]}